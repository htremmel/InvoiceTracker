<#@ template debug="True" hostspecific="True" language="C#" #>
<#@ output extension=".generated.cs"#>
<#@ include file="$(ProjectDir)LinqToDB.Templates\LinqToDB.Access.Tools.ttinclude" #>
<#@ include file="$(ProjectDir)LinqToDB.Templates\PluralizationService.ttinclude"  #>


<#
	/*
		1. Copy this file to a folder where you would like to generate your data model,
		   rename it, and delete .txt extension. For example:

			MyProject
				DataModels
					MyDatabase.tt

		2. Modify the connection settings below to connect to your database.

		3. Add connection string to the web/app.config file:

			<connectionStrings>
				<add name="MyDatabase" providerName="Access" 
					connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=MyDatabase.mdb;Locale Identifier=1033;Jet OLEDB:Engine Type=5;Persist Security Info=True" />
			</connectionStrings>

		4. To access your database use the following code:

			using (var db = new MyDatabaseDB())
			{
				var q =
					from c in db.Customers
					select c;

				foreach (var c in q)r
					Console.WriteLine(c.ContactName);
			}

		5. See more at https://github.com/linq2db/t4models/blob/master/Templates/ReadMe.LinqToDB.md.
	*/
	LoadAccessMetadata(@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\Dropbox\2-Projects\_Git_Root\InvoiceTracker\0-Database\InvoiceTracker.accdb;Persist Security Info=False");
	GenerateViewModel();
    
#>

<#+ 
void GenerateViewModel()
{
	if (GenerationEnvironment.Length > 0 && GenerationEnvironment.ToString().Trim().Length == 0)
		GenerationEnvironment.Length = 0;
	WriteComment(this, "---------------------------------------------------------------------------------------------------");
	WriteComment(this, " <auto-generated>");
	WriteComment(this, "    This code was generated by View model template for Invoice Tracker.");
	WriteComment(this, "    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.");
	WriteComment(this, " </auto-generated>");
	WriteComment(this, "---------------------------------------------------------------------------------------------------");

	WriteLine("using System;");
	WriteLine("using InvoiceTracker.Controllers;");
	WriteLine("using InvoiceTracker.Database;");
	WriteLine("");
	
	WriteLine("namespace InvoiceTracker.Views");
	WriteLine("{");
	PushIndent("	");
	//WriteLine("public partial interface IView");
    //WriteLine("{");
    //WriteLine("\tvoid AddListner(Controllers.IController cntrl);");
    //WriteLine("}");
	//WriteLine("");
    foreach (Table tbl in Tables.Values)
    {
		Write("public partial interface I{0}View", tbl.Name);
		//Write(" : {0}","IView");
		WriteLine("\n\t{");
        foreach (Column col in tbl.Columns.Values)
        {	
			if(col.IsPrimaryKey) continue;	
			Write("\t{0} {1} ", col.Type, col.Name);
			Write("{ get; set; }");
			WriteLine("");
        }
		WriteLine("\tInvoiceTrackerDB Model { get; set; }");
		WriteLine("");
		WriteLine("\tvoid AddListner(Controllers.{0}Controller cntrl);",tbl.Name);
		WriteLine("}");
		WriteLine("");
    }
	PopIndent();
	WriteLine("}");
}
#>


